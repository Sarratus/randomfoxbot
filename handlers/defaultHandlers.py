from aiogram.dispatcher.middlewares import BaseMiddleware
from aiogram.types import Message, BotCommand

from aiogram import filters

from misc import dp, adminUserID, bot
from features.dbInteractions import incrementStatistics, getWholeDb


@dp.message_handler(filters.Text(equals="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"), filters.IDFilter(user_id=adminUserID))
async def getStatsHandler(message: Message):
    stats = getWholeDb()
    await message.answer(text=stats)


class CounterMiddleware(BaseMiddleware):
    def __init__(self) -> None:
        super(CounterMiddleware, self).__init__()

    async def on_pre_process_chosen_inline_result(self, message: Message, data: dict):
        incrementStatistics(userID=message.from_user.id, field="inlineAnswered")


async def set_default_commands():
    commands = [
        {
            'command': 'demotivator',
            'description': 'üåÑ –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ—Ç–∏–≤–∞—Ç–æ—Ä–∞',
        }, {
            'command': 'qr',
            'description': 'üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è QR-–∫–æ–¥–∞',
        }, {
            'command': 'settings',
            'description': 'üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏',
        }, {
            'command': 'get_keyboard',
            'description': 'üü© –í–∫–ª. –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–æ–≤',
        }, {
            'command': 'rm_keyboard',
            'description': 'üü• –í—ã–∫–ª. –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–æ–≤',
        },
    ]

    commands = [
        BotCommand(command['command'], command['description'])
        for command in commands
    ]

    return commands


# ^-^
